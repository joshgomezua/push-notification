swagger: '2.0'
info:
  title: DynamicPush MEAN API
  description: DynamicPush API documentation for Node Express
  version: 0.1.0
host: localhost
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  /auth/signin:
    post:
      summary: user sign in
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: user@dynamicpush.com
              password:
                type: string
                example: qnxTzbSgCqycJHRV8S75DMmwH5gFrKuR
      description: let the user sign in and have access to web apis
      tags:
        - Auth
      responses:
        '200':
          description: User
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /applications:
    get:
      summary: list applications
      description: |
        Applications endpoint returns information about app added by the User
      tags:
        - Applications
      responses:
        '200':
          description: An array of applications
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: create application
      parameters:
        - name: body
          description: json object for application
          required: true
          in: body
          schema:
            type: object
            properties:
              appName:
                type: string
                description: Name of the application
                example: Paramount
              packageName:
                type: string
                description: Mobile app package name
                example: com.appelago.paramount
              googleApiKey:
                type: string
                description: Google API Key used for push notifications
                example: AIzaSyDhAtPeiK9i8fIUodzRuB2H7BLHFEbxOk8
              senderId:
                type: string
                description: Used for create gcm token in mobile app
                example: 525540592108
      description: |
        Create an application and generates apiKey and apiSecret
      tags:
        - Applications
      responses:
        '200':
          description: Application
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /applications/{applicationId}/campaigns:
    get:
      summary: list campaigns
      description: |
        Returns list of campaigns inside application
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
      tags:
        - Campaigns
      responses:
        '200':
          description: An array of campaigns
          schema:
            type: array
            items:
              $ref: '#/definitions/Campaign'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: create campaign
      description: |
        Creates a campaign with basic properties
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: body
          description: json object for campaign
          required: true
          in: body
          schema:
            type: object
            properties:
              title:
                type: string
                description: title of campaign
                example: testing campaign
              tags:
                type: array
                items:
                  type: string
              platform:
                $ref: '#/definitions/Platform'
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign
          schema:
            $ref: '#/definitions/Campaign'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /applications/{applicationId}/campaigns/{campaignId}:
    get:
      summary: get a campaign detail
      description: |
        Get a campaign detail
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign
          schema:
            $ref: '#/definitions/Campaign'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: delete a campaign
      description: |
        delete a campaign
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign
          schema:
            $ref: '#/definitions/Campaign'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: update campaign
      description: |
        Update a campaign
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
        - name: body
          description: json object for campaign
          required: true
          in: body
          schema:
            $ref: '#/definitions/Campaign'
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign
          schema:
            $ref: '#/definitions/Campaign'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /applications/{applicationId}/campaigns/{campaignId}/image:
    post:
      consumes:
      - application/x-www-form-urlencoded
      summary: uploads image
      description: |
        uploads animation for a campaign
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
        - name: image
          required: true
          in: formData
          type: file
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of Image
          schema:
            $ref: '#/definitions/Campaign'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /applications/{applicationId}/campaigns/{campaignId}/schedule:
    put:
      summary: save campaign schedule
      description: |
        Save campaign delivery schedule
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
        - name: body
          description: json object for campaign schedule
          required: true
          in: body
          schema:
            $ref: '#/definitions/CampaignSchedule'
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign schedule
          schema:
            $ref: '#/definitions/CampaignSchedule'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: remove campaign schedule
      description: |
        remove campaign schedule
      parameters:
        - name: applicationId
          required: true
          in: path
          type: string
        - name: campaignId
          required: true
          in: path
          type: string
      tags:
        - Campaigns
      responses:
        '200':
          description: An object of campaign schedule
          schema:
            $ref: '#/definitions/CampaignSchedule'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'

  /mobile/authenticate:
    post:
      summary: mobile sign in
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              apiKey:
                type: string
                example: Zk0C9607FNj9q6DHC1EV
              apiSecret:
                type: string
                example: 7OwvXZ9H1vZtdrkrIWl7
      description: |
        Authenticate mobile app with api key and secret.
        Returns sender id and token to use other mobile APIs.
      tags:
        - Mobile API
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /mobile/subscribe:
    post:
      summary: register app user
      description: |
        Registers app user with device info and gcm token
      tags:
        - Mobile API
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDevice'
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /mobile/track_event:
    post:
      summary: track events from mobile app
      description: |
        Track events from mobile app.
        userId field is required field and tracking event won't work if userId is not set.
        userDevice field is optional and you can set only changed field. For example, when only location of user is changed,
        userDevice: {
          location: {
            lat: '10.100000',
            lng: '10.010000'
          }
        }
      tags:
        - Mobile API
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
                example: 5695b0b389f3409e2986eee9
              event:
                $ref: '#/definitions/AnalyticEvent'
              userDevice:
                $ref: '#/definitions/UserDevice'
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Application:
    type: object
    properties:
      _id:
        type: string
        description: Application ID
      appName:
        type: string
        description: Name of the application
      packageName:
        type: string
        description: Mobile app package name
      apiKey:
        type: string
        description: Key used for mobile api
      apiSecret:
        type: string
        description: Secret used for mobile api
      googleApiKey:
        type: string
        description: Google API Key used for push notifications
      senderId:
        type: string
        description: Used for create gcm token in mobile app
  User:
    type: object
    properties:
      _id:
        type: string
        description: User ID
  UserDevice:
    type: object
    properties:
      gcmToken:
        type: string
      email:
        type: string
      name:
        type: string
      gender:
        type: string
        description: M/F
      language:
        type: string
      location:
        type: object
        properties:
          lat:
            type: string
          lng:
            type: string
      country:
        type: string
      address:
        type: string
      state:
        type: string
      city:
        type: string
      zipcode:
        type: string
      osNumber:
        type: string
      deviceVendor:
        type: string
      deviceModel:
        type: string
      devicePlatform:
        type: string
      carrier:
        type: string
      connectivityType:
        type: string
      sdkVersion:
        type: string
      packageName:
        type: string
      appVersion:
        type: string
      pushNotificationEnabled:
        type: boolean
  AnalyticEvent:
    type: object
    properties:
      eventType:
        type: string
        example: open
      eventTarget:
        type: string
        example: app
      eventValue:
        type: string
        example: test
  Campaign:
    type: object
    properties:
      campaignType:
        type: string
        example: url
      title:
        type: string
        example: test-campaign
      url:
        type: string
        example: https://www.google.com
      tags:
        type: array
        items:
          type: string
      platform:
        $ref: '#/definitions/Platform'
      loopCount:
        type: integer
        minimum: 1
        maximum: 100
      loopDelay:
        type: integer
        minimum: 0
        maximum: 180000
      message:
        type: string
        example: sample notification message
      messagePosition:
        type: string
        example: top
      expiresAt:
        type: string
        format: date-time
      deliveryAction:
        type: object
        properties:
          dpLimit:
            type: integer
          dayLimit:
            type: integer
          actionType:
            type: string
          isUsed:
            type: boolean
      deliverySchedule:
        $ref: '#/definitions/CampaignSchedule'
      isActive:
        type: boolean
      isPaused:
        type: boolean
  Platform:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
          example: Android
        displayType:
          type: array
          items:
            type: string
            example: nova
  CampaignSchedule:
    type: object
    properties:
      repeat:
        type: string
        default: once
        enum:
        - once
        - daily
        - weekly
        - monthly
      sendDate:
        type: string
        format: date-time
      timeZone:
        type: string
      status:
        type: string
        default: ready
        enum:
        - ready
        - inprogress
      lastSent:
        type: string
        format: date-time
      nextSend:
        type: string
        format: date-time
      frequency:
        type: string
        default: immediate
        enum:
        - immediate
        - scheduled
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
